# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            Psr\Log\LoggerInterface $auditLogger: '@monolog.logger.audit'
            iterable $providers: !tagged_iterator semart.user_provider
            iterable $queryExtension: !tagged_iterator semart.query_extension
            iterable $generators: !tagged_iterator semart.generator
            iterable $initiators: !tagged_iterator semart.permission_initiator
            iterable $removers: !tagged_iterator semart.permission_remover

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    KejawenLab\Semart\ApiSkeleton\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    KejawenLab\Semart\ApiSkeleton\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    _instanceof:
        Doctrine\Common\EventSubscriber:
            tags:
                - { name: doctrine.event_subscriber }
        KejawenLab\Semart\ApiSkeleton\Security\Model\UserProviderInterface:
            tags:
                - { name: semart.user_provider }
        KejawenLab\Semart\ApiSkeleton\Pagination\Model\QueryExtensionInterface:
            tags:
                - { name: semart.query_extension }
        KejawenLab\Semart\ApiSkeleton\Generator\Model\GeneratorInterface:
            tags:
                - { name: semart.generator }
        KejawenLab\Semart\ApiSkeleton\Security\Model\PermissionInitiatorInterface:
            tags:
                - { name: semart.permission_initiator }
        KejawenLab\Semart\ApiSkeleton\Security\Model\PermissionRemoverInterface:
            tags:
                - { name: semart.permission_remover }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    KejawenLab\Semart\ApiSkeleton\Repository\UserRepository:
        arguments:
            $superAdmin: '%env(resolve:APP_SUPER_ADMIN)%'
    KejawenLab\Semart\ApiSkeleton\Security\Authorization\Ownership:
        arguments:
            $superAdmin: '%env(resolve:APP_SUPER_ADMIN)%'
            $ownershipProperty: 'created_by'
    KejawenLab\Semart\ApiSkeleton\EventSubscriber\ChangeLoggerSubscriber:
        arguments:
            $logger: '@monolog.logger.db'
    KejawenLab\Semart\ApiSkeleton\Cron\Validator\CronScheduleFormatValidator:
        arguments:
            $validator: '@cron.validator'
    KejawenLab\Semart\ApiSkeleton\Security\Service\PermissionService:
        arguments:
            $class: 'KejawenLab\Semart\ApiSkeleton\Entity\Permission'
